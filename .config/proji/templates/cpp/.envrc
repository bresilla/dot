tidyup
use flake
local vimrc

export ENVNAME='C++'
export CXX='clang++'
export CC='clang'
export PRONAME=$(basename $PWD)
#export TORCH_INSTALL_PREFIX=/opt/libtorch

export VCPKG_ROOT=$(git rev-parse --show-toplevel)/vendor/vcpkg
export VCPKG_DOWNLOADS=$(git rev-parse --show-toplevel)/vendor/vcpkg/downloads
export HUNTER_ROOT=$(git rev-parse --show-toplevel)/vendor/hunter

export_alias vcpkg 'vcpkg --vcpkg-root $(git rev-parse --show-toplevel)/vendor/vcpkg/ $@'

export_alias compile '[[ $(ls -A build/) ]] && rm -rf build/*; cmake -H. -Bbuild -DCMAKE_EXPORT_COMPILE_COMMANDS=1 -DCMAKE_BUILD_TYPE=${1:-FastDebug} ${2:-""} 2>&1 | bat'
export_alias kungfu 'compile ${1:-FastDebug} && cmake --build build/ --target'
export_alias karate 'compile ${1:-FastDebug} -GNinja && ninja -C build'
export_alias run 'cd $(git rev-parse --show-toplevel) && cmake --build build/ --target && cd $(git rev-parse --show-toplevel)/build/bin && ./$PRONAME; cd $(git rev-parse --show-toplevel)'
export_alias build 'karate'

new_file() {
    base=$(git rev-parse --show-toplevel) && cd $base
    cd $base
    if [ ! -d $(dirname $base/src/$1) ] || [ ! -d $(dirname $base/include/$1) ]; then
        echo "lib: $(dirname $base/src/$1) does not exist"
    else
        touch $base/src/$1.cpp
        touch $base/include/$1.h
        printf "#pragma once\n\n" >> $base/include/$1.h
        echo "file: $1 created"
    fi
    cd -
}
new_lib() {
    base=$(git rev-parse --show-toplevel) && cd $base
    if [ ! -d $base/src/$1 ] || [ ! -d $base/include/$1 ]; then
        mkdir src/$1 && mkdir include/$1
    new_file $1/$1
        substitute=$(printf "$(grep 'set(LIBRARIES' CMakeLists.txt | rev | cut -c2- | rev) $1)")
        sed -i "s/set(LIBRARIES.*/$substitute/g" CMakeLists.txt
        echo "lib: $1 created"
    else
        echo "lib: $1 already exist"
    fi
    cd -
}

export_function new_file
export_function new_lib
